name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install pytest
        pip install -r requirements.txt
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
               
    - name: Run tests
      run: |
        pytest

    - name: Verify server starts (with mock Entra ID values)
      run: |
        # Create a mock oauth-protected-resource.json for testing
        echo '{"resource":"api://mock","issuer":"https://mock","scopes":["mcp.tools"]}' > oauth-protected-resource.json
        # Run server in test mode (this should be implemented in server.py)
        TESTING=true python server.py &
        # Check if server started successfully
        sleep 5
        if ! curl -s http://localhost:8000/.well-known/oauth-protected-resource > /dev/null; then
          echo "Server failed to start or respond"
          exit 1
        fi
        # Cleanup
        kill $(lsof -t -i:8000) || true